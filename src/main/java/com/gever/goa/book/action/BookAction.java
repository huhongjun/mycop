package com.gever.goa.book.action;

import org.apache.struts.action.*;
import com.gever.goa.base.*;
import com.gever.vo.*;
import com.gever.exception.DefaultException;
import javax.servlet.http.HttpServletRequest;
import com.gever.util.StringUtils;

import com.gever.goa.book.dao.*;
import com.gever.goa.book.dao.impl.*;
import com.gever.goa.book.vo.BookVO;
import com.gever.goa.book.dao.BookFactory;

/**
 * Comment block is generated by javaClassComment.vsl
 *
 * <p>Title: </p>
 * <p>Description: Book 实体</p>
 * <p>Copyright: Copyright (c) 2004</p>
 * <p>Company:OSMatrix 天行软件</p>
 * @Author:		HuHJ
 * @Version:1.0
 *
 */
public class BookAction extends BaseAction {
    BookDao myDao = null;
    public BookAction() {}

    /**
     * 初始化页面数据
     * @param actionform 当前的vo对象
     * @return 当前所用的vo对象
     * @throws DefaultException
     */
    protected void initData(GoaActionConfig cfg) throws DefaultException,
        Exception {

        BookForm myForm = (BookForm) cfg.getBaseForm(); //得到form变量
        myDao = BookFactory.getInstance().createBookDAO(
        super.dbData); //得到相对应dao的实例
        cfg.setBaseDao( (BaseDAO) myDao);

        if (myForm.getVo() == null){
            myForm.setVo(new BookVO());
        }
    }

    /**
     * 到清单页面
     * @param cfg 当前Action相关配置类
     * @return forward地址
     * @throws DefaultException
     * @throws Exception
     */

    protected String toList(GoaActionConfig cfg) throws DefaultException,
        Exception {
       HttpServletRequest request =  cfg.getRequest();
       String nodeid = StringUtils.nullToString(request.getParameter("nodeid"));
       if (!"".equals(nodeid)) {		                 //有xmlTree传入参数时
           cfg.getBaseForm().setSqlWhere(" and deptid = '" + nodeid + "'");
       } else {
           cfg.getBaseForm().setSqlWhere("");    //没有xmlTree传入参数时
       }
       super.toList(cfg);
       log.showLog("------getPageControl---"+  cfg.getBaseForm().getPageControl().getData().size());
        return this.FORWORD_LIST_PAGE;
    }

    /**
     * 获取tree的数据
     * @param cfg 当前Action相关配置类
     * @return forward地址
     * @throws DefaultException
     * @throws Exception
     */
    public String doTreeData(GoaActionConfig cfg) throws DefaultException,
        Exception{
        String nodeid = StringUtils.nullToString(cfg.getRequest().getParameter("nodeid"));

	        //获取nodeid的子节点数据
        cfg.getRequest().setAttribute("treeData", myDao.getTreeData(nodeid));
        return TREE_PAGE;
    }
}