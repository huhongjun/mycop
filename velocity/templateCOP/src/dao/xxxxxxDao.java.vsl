package ${entity.root-package}.dao;

import com.gever.vo.VOInterface;
import com.gever.exception.DefaultException;
import java.util.List;

#parse("velocity/templateCOP/common/JavaClassComment.vsl")

public interface ${entity.name}Dao {

    /** delete
     * @param aryPk   primary key array
     * @param vo 	     current vo object
     * @return        update how many rows,failed to -1
     * @throws        DefaultException
     */
    public int delBySelect(String[] aryPk, VOInterface vo) throws
        DefaultException;

    /**
     * get the sql for page split
     * @return sql clause
     */
    public String getPageSql();

    /** insert
     * @param vo   current vo object
     * @return     number of inserted rows,failed to -1
     * @throws     DefaultException
     */
    public int insert(VOInterface vo) throws DefaultException;

    /**
     * update
     * @param vo  current vo object
     * @return    number of updated rows,failed to -1
     * @throws    DefaultException
     */
    public int update(VOInterface vo) throws DefaultException;

    /**
     * query all
     * @param vo  current vo object
     * @return    all rows of table [${entity.table-name}]
     * @throws    DefaultException
     */
    public List queryAll(VOInterface vo) throws DefaultException;

    /**
     * 
     * @param vo     当前vo对象
     * @param start  开始
     * @param        howMany 多少笔资料
     * @return       所有例子数据列表
     * @throws       DefaultException
     */
    public List queryByPage(VOInterface vo, long start, long howMany) throws DefaultException;

    /**
     * 统计当前的数据
     * @param vo 当前vo对象
     * @return 统计数量
     * @throws DefaultException
     */
    public long queryByCount(VOInterface vo) throws DefaultException;

    /**
     * 复制选择的资料
     * @param aryPk 主键数组
     * @param vo 当前VO对象
     * @return 复制成功多少笔,-1为失败
     * @throws DefaultException
     */

    public int copy(String[] keyValue, VOInterface vo) throws DefaultException;

    public List getTreeData() throws DefaultException;	// 用设定的TreeSQL获取全部节点
    public List getTreeData(String nodedid)throws DefaultException;//获取指定节点的子节点
  
}